name: TvtPlay

on:
  push:
    paths:
      - .github/workflows/TvtPlay.yml

  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: x64
            deploy: true
          # - platform: Win32
          #   deploy: false

    outputs:
      artifact: ${{ steps.output.outputs.artifact }}
      should_deploy: ${{ steps.output.outputs.should_deploy }}

    steps:
      - name: Checkout Repository (TvtPlay)
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: xtne6f/TvtPlay
          submodules: recursive

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: MSBuild (TvtPlay.sln)
        working-directory: src
        run: msbuild TvtPlay.sln /p:Configuration="Release" /p:Platform="${{ matrix.platform }}" /p:CodePage=932 /p:OutDir="${{ matrix.platform }}" -m /p:PlatformToolset=v143

      - name: MSBuild (BonDriver_Pipe.sln)
        working-directory: BonDriver_Pipe_src
        run: msbuild BonDriver_Pipe.sln /p:Configuration="Release" /p:Platform="${{ matrix.platform }}" /p:CodePage=932 /p:OutDir="${{ matrix.platform }}" -m /p:PlatformToolset=v143

      - name: Patch SoundTouch.vcxproj (SoundTouch)
        working-directory: TvtAudioStretchFilter_src/soundtouch
        run: git apply ..\SoundTouch.patch
      - name: Patch SoundTouch.vcxproj (SoundTouch)
        working-directory: TvtAudioStretchFilter_src/soundtouch/source/SoundTouch
        # コマンドラインから /MD を有効にできないのでプロジェクトファイルを直接書き換える
        run: |
          $ProjectFile = ".\SoundTouch.vcxproj"
          $Content = Get-Content $ProjectFile | % { $_ -replace "<RuntimeLibrary>.+</RuntimeLibrary>","<RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>" }
          $Content | Out-File $ProjectFile -Encoding UTF8
      - name: MSBuild (SoundTouch.vcxproj)
        working-directory: TvtAudioStretchFilter_src/soundtouch/source/SoundTouch
        run: msbuild SoundTouch.vcxproj /p:Configuration="Release" /p:Platform="${{ matrix.platform }}" -m /p:PlatformToolset=v143

      - name: Patch BaseClasses.vcxproj (SoundTouch)
        working-directory: TvtAudioStretchFilter_src/baseclasses
        # コマンドラインから /MD を有効にできないのでプロジェクトファイルを直接書き換える
        run: |
          $ProjectFile = ".\BaseClasses.vcxproj"
          $Content = Get-Content $ProjectFile | % { $_ -replace "<RuntimeLibrary>.+</RuntimeLibrary>","<RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>" }
          $Content | Out-File $ProjectFile -Encoding UTF8
      - name: MSBuild (BaseClasses.vcxproj)
        working-directory: TvtAudioStretchFilter_src/baseclasses
        run: msbuild BaseClasses.vcxproj /p:Configuration="Release" /p:Platform="${{ matrix.platform }}" -m /p:PlatformToolset=v143

      - name: MSBuild (TvtAudioStretchFilter.sln)
        working-directory: TvtAudioStretchFilter_src
        run: msbuild TvtAudioStretchFilter.sln /p:Configuration="Release" /p:Platform="${{ matrix.platform }}" /p:OutDir="${{ matrix.platform }}" -m /p:PlatformToolset=v143

      - name: Prepare Artifacts
        shell: powershell
        run: |
          New-Item -Path Artifact -ItemType Directory
          New-Item -Path Artifact/Plugins -ItemType Directory
          Copy-Item -Path src/${{ matrix.platform }}/TvtPlay.tvtp -Destination Artifact/Plugins/
          Copy-Item -Path BonDriver_Pipe_src/${{ matrix.platform }}/BonDriver_Pipe.dll -Destination Artifact/
          Copy-Item -Path TvtAudioStretchFilter_src/${{ matrix.platform }}/TvtAudioStretchFilter.ax -Destination Artifact/Plugins/

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: TvtPlay_${{ matrix.platform }}
          if-no-files-found: error
          path: Artifact/

      - name: Set Job Outputs
        id: output
        uses: actions/github-script@v7
        with:
          script: |
            core.setOutput("artifact", "TvtPlay_${{ matrix.platform }}")
            core.setOutput("should_deploy", "${{ matrix.deploy }}")

  release:
    needs: build
    uses: ./.github/workflows/release.yml
    with:
      artifact-name: '${{ needs.build.outputs.artifact }}'
    permissions:
      contents: write

  deploy:
    needs: build
    if: needs.build.outputs.should_deploy == 'true'
    uses: ./.github/workflows/deploy.yml
    with:
      artifact-name: '${{ needs.build.outputs.artifact }}'
    secrets: inherit
    permissions: {}
